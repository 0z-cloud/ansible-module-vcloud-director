# Copyright Â© 2018 VMware, Inc. All Rights Reserved.
# SPDX-License-Identifier: BSD-2-Clause

---
# tasks file for roles/vappvm
- name: fetch vapps
  no_log: False
  vcd_fetch_vapp:
    vdc: Terraform_VDC
  register: output

- name: create vapp vm "{{ vapp_vm_1 }}" from catalog
  no_log: False
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_1 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    source_catalog_name: "test_catalog"
    source_template_name: "centos7"
    source_vm_name: "CentOS7"
    hostname: "vcdcell"
    vmpassword: "rootpass" 
    vmpassword_auto: "false"
    vmpassword_reset: "false"
    ip_allocation_mode: "DHCP"
    state: "present"
    power_on: True
    all_eulas_accepted: "true"
    # storage_profile: "Standard"
    network: "web2Network"
  register: output

- assert:
    that:
      - "'Vapp VM {{ vapp_vm_1 }} has been created.' in output.msg"

- name: create vapp vm "{{ vapp_vm_2 }}" from vapp
  no_log: False
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    source_vapp: "web"
    source_vm_name: "web1" 
    hostname: "vcdcell"
    vmpassword: "rootpass" 
    vmpassword_auto: "false"
    vmpassword_reset: "false"
    ip_allocation_mode: "DHCP"
    state: "present"
    power_on: True
    all_eulas_accepted: "true"
    # storage_profile: "Standard"
    network: "web2Network"
  register: output

- assert:
    that:
      - "'Vapp VM {{ vapp_vm_2 }} has been created.' in output.msg"

- name: power off "{{ vapp_vm_1 }}" vapp vm
  vcd_vapp_vm:
    source_vapp: "web2"
    target_vm_name: "{{ vapp_vm_1 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    operation: "poweroff"
  register: output

- assert:
    that:
      - "'Vapp VM {{ vapp_vm_1 }} has been powered off.' in output.msg"

- name: power off "{{ vapp_vm_2 }}" vapp vm
  vcd_vapp_vm:
    source_vapp: "web2"
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    operation: "poweroff"
  register: output

- assert:
    that:
      - "'Vapp VM {{ vapp_vm_2 }} has been powered off.' in output.msg"

- name: power on "{{ vapp_vm_1 }}" vapp vm
  vcd_vapp_vm:
    source_vapp: "web2"
    target_vm_name: "{{ vapp_vm_1 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    operation: "poweron"
  register: output

- assert:
    that:
      - "'Vapp VM {{ vapp_vm_1 }} has been powered on.' in output.msg"

- name: power on "{{ vapp_vm_2 }}" vapp vm
  vcd_vapp_vm:
    source_vapp: "web2"
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    operation: "poweron"
  register: output

- assert:
    that:
      - "'Vapp VM {{ vapp_vm_2 }} has been powered on.' in output.msg"

- name: modify "{{ vapp_vm_1 }}" cpu vapp vm
  vcd_vapp_vm:
    source_vapp: "web2"
    target_vm_name: "{{ vapp_vm_1 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    virtual_cpus: 2
    cores_per_socket: 2
    operation: "updatecpu"
  register: output

- assert:
    that:
      - "'Vapp VM {{ vapp_vm_1 }} has been updated.' in output.msg"

- name: modify "{{ vapp_vm_2 }}" cpu vapp vm
  vcd_vapp_vm:
    source_vapp: "web2"
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    virtual_cpus: 2
    cores_per_socket: 2
    operation: "updatecpu"
  register: output

- assert:
    that:
      - "'Vapp VM {{ vapp_vm_2 }} has been updated.' in output.msg"

- name: power on "{{ vapp_vm_1 }}" vapp vm
  vcd_vapp_vm:
    source_vapp: "web2"
    target_vm_name: "{{ vapp_vm_1 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    operation: "poweron"
  register: output

- assert:
    that:
      - "'Vapp VM {{ vapp_vm_1 }} has been powered on.' in output.msg"

- name: power on "{{ vapp_vm_2 }}" vapp vm
  vcd_vapp_vm:
    source_vapp: "web2"
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    operation: "poweron"
  register: output

- assert:
    that:
      - "'Vapp VM {{ vapp_vm_2 }} has been powered on.' in output.msg"

- name: modify "{{ vapp_vm_1 }}" memory vapp vm
  vcd_vapp_vm:
    source_vapp: "web2"
    target_vm_name: "{{ vapp_vm_1 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    memory: 4096
    operation: "updatememory"
  register: output

- assert:
    that:
      - "'Vapp VM {{ vapp_vm_1 }} has been updated.' in output.msg"

- name: modify "{{ vapp_vm_2 }}" memory vapp vm
  vcd_vapp_vm:
    source_vapp: "web2"
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    memory: 4096
    operation: "updatememory"
  register: output

- assert:
    that:
      - "'Vapp VM {{ vapp_vm_2 }} has been updated.' in output.msg"

- name: reload "{{ vapp_vm_1 }}" vapp vm
  vcd_vapp_vm:
    source_vapp: "web2"
    target_vm_name: "{{ vapp_vm_1 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    operation: "reloadvm"
  register: output

- assert:
    that:
      - "'Vapp VM {{ vapp_vm_1 }} has been reloaded.' in output.msg"

- name: reload "{{ vapp_vm_2 }}" vapp vm
  vcd_vapp_vm:
    source_vapp: "web2"
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    operation: "reloadvm"
  register: output

- assert:
    that:
      - "'Vapp VM {{ vapp_vm_2 }} has been reloaded.' in output.msg"

- name: undeploy "{{ vapp_vm_1 }}" vapp vm
  vcd_vapp_vm:
    source_vapp: "web2"
    target_vm_name: "{{ vapp_vm_1 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    operation: "undeploy"
  register: output

- assert:
    that:
      - "'Vapp VM {{ vapp_vm_1 }} has been undeployed.' in output.msg"

- name: undeploy "{{ vapp_vm_2 }}" vapp vm
  vcd_vapp_vm:
    source_vapp: "web2"
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    operation: "undeploy"
  register: output

- assert:
    that:
      - "'Vapp VM {{ vapp_vm_2 }} has been undeployed.' in output.msg"

- name: deploy "{{ vapp_vm_1 }}" vapp vm
  vcd_vapp_vm:
    source_vapp: "web2"
    target_vm_name: "{{ vapp_vm_1 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    operation: "deploy"
  register: output

- assert:
    that:
      - "'Vapp VM {{ vapp_vm_1 }} has been deployed.' in output.msg"

- name: deploy "{{ vapp_vm_2 }}" vapp vm
  vcd_vapp_vm:
    source_vapp: "web2"
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    operation: "deploy"
  register: output

- assert:
    that:
      - "'Vapp VM {{ vapp_vm_2 }} has been deployed.' in output.msg"

- name: delete "{{ vapp_vm_1 }}" vapp vm
  vcd_vapp_vm:
    source_vapp: "web2"
    target_vm_name: "{{ vapp_vm_1 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    state: "absent"
  register: output

- assert:
    that:
      - "'Vapp VM {{ vapp_vm_1 }} has been deleted.' in output.msg"

- name: delete "{{ vapp_vm_2 }}" vapp vm
  vcd_vapp_vm:
    source_vapp: "web2"
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    state: "absent"
  register: output

- assert:
    that:
      - "'Vapp VM {{ vapp_vm_2 }} has been deleted.' in output.msg"
